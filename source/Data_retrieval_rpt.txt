Function data_retrieval_rpt(arg As String) As Integer

Dim strFile As String
Dim MyData As String, strData() As String
Dim FinalArray() As String
Dim StartTime As String, endTime As String
Dim n As Long, j As Long, i As Long
Dim ArgList, argListItem, tempstr, fileListStr, filterStr, fileList, fileListItem
Dim MyDir As String
Dim cn As Object, strcon, strSQL, rs ' connection, recordset
Dim lastRow, last_row
Dim resultSheetName
Dim strSQLSELECT, strSQLWHERE
Dim iCols
Dim nFile
Dim Filename
Dim nowsheet
Dim TempB
Dim mRow, mCol
Dim mWaferID
Dim strCoord
Dim tmpStr
Dim collCoord
Dim dirFileListStr As String
Dim rpt_filename, rpt_date, rpt_probecard, rpt_tester
Dim iSheetExist

resultSheetName = "SQLresult"
MyDir = ActiveWorkbook.Path
Set cn = CreateObject("ADODB.Connection")
Set rs = CreateObject("ADODB.RECORDSET")

StartTime = now
ArgList = Split(arg, ";")

For Each argListItem In ArgList
    tempstr = Split(argListItem, ":")
    Select Case tempstr(0)
    Case "FileList"
        fileListStr = tempstr(1)
    Case "DirFileList"
        dirFileListStr = tempstr(1)
    End Select
Next argListItem

'if dirFileListStr is defined, it will overwrite fileListStr
If dirFileListStr <> "" Then
    fileListStr = LoopThroughFiles(MyDir, dirFileListStr)
End If

'SheetExists(resultSheetName)

fileList = Split(fileListStr, ",")
lastRow = 1

For Each fileListItem In fileList
    strFile = MyDir & "\" & fileListItem
    Filename = strFile

    ' get file line count and judge if over excel limit
    ' refer to below URL for reference setting
    ' http://stackoverflow.com/questions/3233203/how-do-i-use-filesystemobject-in-vba
    ' Within Excel you need to set a reference to the VB script run-time library. The relevant file is usually located at \Windows\System32\scrrun.dll
    ' To reference this file, load the Visual Basic Editor (ALT+F11)
    ' Select Tools > References from the drop-down menu
    ' A listbox of available references will be displayed
    ' Tick the check-box next to 'Microsoft Scripting Runtime'
    ' The full name and path of the scrrun.dll file will be displayed below the listbox
    ' Click on the OK button.
    Dim FSO As New FileSystemObject
    Dim f As TextStream
    Set f = FSO.OpenTextFile(Filename, ForReading)
    f.ReadAll
    If f.Line > 1048576 Then
        Err.Raise 999, , "File line over 1048576!!"
        Exit Function
    End If
    Set f = Nothing
    Set FSO = Nothing

    ' add sheet "Data"
    Set nowsheet = AddNewSheet("Data")
    nowsheet.Move after:=Worksheets(Worksheets.Count)

    'get file lines
    With nowsheet.QueryTables.Add(Connection:="TEXT;" & Filename, Destination:=Range("A1"))
        .Name = "JackC"
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .RefreshStyle = xlInsertDeleteCells
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .TextFilePlatform = xlWindows
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = False
        .TextFileTabDelimiter = True
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileColumnDataTypes = Array(1)
        .Refresh BackgroundQuery:=False
    End With

    ' add LIM=XXX to cell(3,1) and delete row 4
    nowsheet.Cells(3, 1) = nowsheet.Cells(3, 1) & " " & nowsheet.Cells(4, 1)
    If Trim(nowsheet.Cells(4, 1)) <> "" Then nowsheet.Range("4:4").Delete

    'delete blank column between sites
    For i = nowsheet.UsedRange.Columns.Count To 6 Step -1
        If Trim(nowsheet.Cells(5, i)) = "" Then nowsheet.Columns(i).Delete
    Next i
        
    ' handle header rows
    TempB = Cells(3, 1)
    nowsheet.Range("A:A").Delete
    nowsheet.Rows("1:6").Select
    Selection.Insert shift:=xlDown
    nowsheet.Cells(1, 1) = "<Process_ID>"
    nowsheet.Cells(2, 1) = "<Product_ID>"
    nowsheet.Cells(3, 1) = "<Lot_ID>"
    nowsheet.Cells(4, 1) = "<Test_Plan_ID>"
    nowsheet.Cells(5, 1) = "<Limit_File>"
    nowsheet.Cells(6, 1) = "<Date/Time>"
    nowsheet.Cells(7, 1) = "(LONG REPORT)"
    nowsheet.Cells(8, 1) = "-------------"
    nowsheet.Cells(9, 1) = "TYPE_SCALAR"
    nowsheet.Cells(10, 1) = "-------------"
    nowsheet.Cells(2, 2) = ":" & Trim(Mid(TempB, InStr(1, TempB, "TYPE=") + Len("TYPE="), InStr(1, TempB, "LOT=") - InStr(1, TempB, "TYPE=") - Len("Type=")))
    nowsheet.Cells(3, 2) = ":" & Trim(Mid(TempB, InStr(1, TempB, "LOT=") + Len("LOT="), InStr(1, TempB, "TOTAL=") - InStr(1, TempB, "LOT=") - Len("LOT=")))
    nowsheet.Cells(4, 2) = ":"
    nowsheet.Cells(5, 2) = ":" & Trim(Mid(TempB, InStr(1, TempB, "LIM=") + Len("LIM=")))
    nowsheet.Cells(6, 2) = ":" & Trim(Mid(TempB, InStr(1, TempB, "DATE=") + Len("DATE="), InStr(1, TempB, "TESTER_ID=") - InStr(1, TempB, "DATE=") - Len("DATE=")))
    
    ' for later WAT_format_for_jmp use
    rpt_filename = fileListItem
    rpt_probecard = Trim(Mid(TempB, InStr(1, TempB, "PROBE_CARD=") + Len("PROBE_CARD="), InStr(1, TempB, "DATE=") - InStr(1, TempB, "PROBE_CARD=") - Len("PROBE_CARD=")))
    rpt_date = Trim(Mid(TempB, InStr(1, TempB, "DATE=") + Len("DATE="), InStr(1, TempB, "TESTER_ID=") - InStr(1, TempB, "DATE=") - Len("DATE=")))
    rpt_tester = Trim(Mid(TempB, InStr(1, TempB, "TESTER_ID=") + Len("TESTER_ID="), InStr(1, TempB, "LIM=") - InStr(1, TempB, "TESTER_ID=") - Len("TESTER_ID=")))
    nowsheet.Cells(1, 3) = rpt_filename
    nowsheet.Cells(2, 3) = rpt_probecard
    nowsheet.Cells(3, 3) = rpt_date
    nowsheet.Cells(4, 3) = rpt_tester
    
    
    ' change each site header from <x,y> to <Wafer-Site>(x,y)
    mRow = 1: mCol = 1
    Do While Not (nowsheet.Cells(mRow, mCol) = "" And nowsheet.Cells(mRow + 1, mCol) = "")
        If Left(nowsheet.Cells(mRow, mCol), 9) = "*** WAFER" Then
            mWaferID = Trim(Mid(nowsheet.Cells(mRow, mCol), 10))
            nowsheet.Cells(mRow, mCol) = "No./DataType"
            nowsheet.Cells(mRow, 2) = "Parameter"
            nowsheet.Cells(mRow, 3) = "Unit"
            i = 4
            Do While nowsheet.Cells(mRow, i) <> ""
                strCoord = ""
                If InStr(nowsheet.Cells(mRow, i), ".") > 0 Then
                    strCoord = Replace(nowsheet.Cells(mRow, i), ".", ",")
                    strCoord = Replace(strCoord, "<", "(")
                    strCoord = Replace(strCoord, ">", ")")
                ElseIf tmpStr <> "" Then
                    On Error Resume Next
                        strCoord = "(" & collCoord(CStr(nowsheet.Cells(mRow, i))) & ")"
                    On Error GoTo 0
                End If
                Cells(mRow, i) = "<" & mWaferID & "-" & CStr(i - 3) & ">" & strCoord
                i = i + 1
            Loop
            nowsheet.Cells(mRow, i) = "W L"
            nowsheet.Cells(mRow, i + 1) = "RULE"
        End If
        mRow = mRow + 1
    Loop
    
    'set all cells format
    Cells.Select
    Selection.Columns.AutoFit
    Range("A1").Select
    
    Call WAT_Format_for_jmp
    
    ' delete "Data" sheet
    Application.DisplayAlerts = False
    nowsheet.Delete
    Application.DisplayAlerts = True
    Set nowsheet = Nothing

Next fileListItem
Set cn = Nothing

endTime = now
Debug.Print "Process started at:" & StartTime
Debug.Print "Process ended at:" & endTime

data_retrieval_rpt = 0 'return 0 if successful

End Function