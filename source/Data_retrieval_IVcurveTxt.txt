Function Data_retrieval_IVcurveTxt(arg As String) As Integer
' this function still need update to format the output
Dim ArgList
Dim argListItem
Dim tempstr
Dim shtName
Dim SplitBy
Dim splitColName
Dim GroupBy
Dim outSheetName
Dim sDataSheet
Dim iColCnt, iRowCnt
Dim sSplitBy
Dim sSplitColumn
Dim GroupByAry
Dim j
Dim iRowCntNew
Dim iSplitCnt
Dim nowGroup
Dim nowSplitBy
Dim nowValue
Dim exist_Split
Dim k
Dim exist_Group
Dim SortByHeaderName
Dim realSortByHeaderName
Dim DirectSort
Dim LookUpTableWorkbook
Dim LookUpTableWorksheet
Dim wsOut, wsLookUp, wbLookUp
Dim sFilepath
Dim sFilename
Dim origWB
Dim origDrive
Dim origFilepath
Dim sTxtFileListStr
Dim TxtFileList
Dim sTxtFile
Dim lastRow
Dim i
Dim iRow
Dim curTK
Dim curWafer
Dim curSite
Dim test_date
Dim iSheetNum
Dim cur_selection
Dim first_header

ArgList = Split(arg, ";")
sFilepath = ActiveWorkbook.Path ' default file path
For Each argListItem In ArgList
tempstr = Split(argListItem, "#") ' use '#' due to drive has ':', other functions will still use ':'
Select Case tempstr(0)
Case "Filepath"
    sFilepath = tempstr(1)
Case "Filename"
    sFilename = tempstr(1)
End Select
Next argListItem

sTxtFileListStr = LoopThroughFiles(CStr(sFilepath), "*.txt")
TxtFileList = Split(sTxtFileListStr, ",")

Set origWB = ActiveWorkbook
'origDrive = Application.ActiveWorkbook.Path
'origFilepath = Application.ActiveWorkbook.Path

iSheetNum = 0
For Each sTxtFile In TxtFileList
    iSheetNum = iSheetNum + 1
    origWB.Activate
    Do While SheetExists("txt" & CStr(iSheetNum))
        iSheetNum = iSheetNum + 1
    Loop
    'origWB.Worksheets.Add After:=origWB.Worksheets(origWB.Worksheets.Count)
    'ActiveSheet.Name = "txt" & CStr(iSheetNum)
    Set wsOut = ActiveSheet
    
    Workbooks.OpenText _
        Filename:=sFilepath & "" & sTxtFile, _
        Origin:=1257, _
        StartRow:=1, _
        DataType:=xlDelimited, _
        TextQualifier:=xlTextQualifierNone, _
        ConsecutiveDelimiter:=True, _
        Tab:=False, _
        Semicolon:=False, _
        Comma:=True, _
        Space:=True, _
        Other:=True, _
        OtherChar:=":", _
        FieldInfo:=Array(Array(1, 1), Array(2, 1), Array(3, 1), Array(4, 1), Array(5, 1)), _
        TrailingMinusNumbers:=True
    lastRow = Cells(1, 1).CurrentRegion.Rows.Count
    ActiveWorkbook.Sheets(1).Range(Cells(1, 1), Cells(lastRow, 20)).Copy Destination:=wsOut.Cells(1, 1)
    Workbooks(sTxtFile).Close
    
    ' add file name
    origWB.Activate
    lastRow = Cells(1, 1).CurrentRegion.Rows.Count
    
    ' make sure first column is not blank
    cur_selection = Selection.Value
    On Error Resume Next
    Range("A1:A" & lastRow).SpecialCells(xlCellTypeBlanks).Select
    If Selection.Value <> cur_selection Then
        Selection.Delete shift:=xlToLeft
    End If
    On Error GoTo 0
    
    wsOut.Columns(1).Insert
    wsOut.Cells(1, 1) = "Filename"
    wsOut.Range(Cells(2, 1), Cells(lastRow, 1)) = sTxtFile
    
    ' add wafer and site
    wsOut.Columns(2).Insert
    wsOut.Columns(2).Insert
    first_header = Cells(1, 4)
    For i = 1 To lastRow
        If Trim(Cells(i, 4)) = first_header Then
            curWafer = Cells(i, 14)
            curSite = Cells(i, 17)
        Else
            Cells(i, 2) = curWafer
            Cells(i, 3) = curSite
        End If
    Next i
    Cells(1, 2) = "Wafer"
    Cells(1, 3) = "Site"
    
    ' delete ==== row and header row, but keep first row
    For i = lastRow To 2 Step -1
        If Left(Cells(i, 4), 1) = "=" Or Cells(i, 3) = "" Then
            Rows(i).Delete
        End If
    Next i
    
    ' handle test date
    lastRow = Cells(1, 1).CurrentRegion.Rows.Count
    wsOut.Columns(2).Insert
    Cells(1, 2) = "Test_Date"
    test_date = Cells(1, 20) & Cells(1, 21) & Cells(1, 22)
    Range(Cells(2, 2), Cells(lastRow, 2)) = test_date
    Range(Cells(1, 13), Cells(1, 22)).Delete
    
    ' autofit
    wsOut.Columns.AutoFit
    
Next sTxtFile

Cells(1, 1).Select
' activeworkbook.Save

End Function